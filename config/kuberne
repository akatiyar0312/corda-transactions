---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: corda
  name: corda
spec:
  ports:
    - name: "8888"
      port: 8888
      targetPort: 8888
    - name: "7004"
      port: 7004
      targetPort: 7004
    - name: "5005"
      port: 5005
      targetPort: 5005
  selector:
    io.kompose.service: corda

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: flow-management-tool
  name: flow-management-tool
spec:
  ports:
    - name: "5000"
      port: 5000
      targetPort: 5000
  selector:
    io.kompose.service: flow-management-tool

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
  selector:
    io.kompose.service: kafka

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: postgresql
  name: postgresql
spec:
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: postgresql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: corda
  name: corda
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: corda
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: corda
    spec:
      containers:
        - args:
            - -mbus.busType=KAFKA
            - -mbootstrap.servers=kafka:29092
            - -spassphrase=password
            - -ssalt=salt
            - -ddatabase.user=user
            - -ddatabase.pass=password
            - -ddatabase.jdbc.url=jdbc:postgresql://postgresql:5432/cordacluster
            - -ddatabase.jdbc.directory=/opt/jdbc-driver/
          env:
            - name: CONSOLE_LOG_LEVEL
              value: info
            - name: ENABLE_LOG4J2_DEBUG
              value: "false"
            - name: JAVA_TOOL_OPTIONS
              value: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
            - name: LOG4J_CONFIG_FILE
              value: config/log4j2.xml
          image: corda/corda-os-combined-worker-kafka:5.2.0.0
          name: corda
          ports:
            - containerPort: 8888
              protocol: TCP
            - containerPort: 7004
              protocol: TCP
            - containerPort: 5005
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: corda-cm0
            - mountPath: /logs
              name: corda-claim1
      restartPolicy: Always
      volumes:
        - configMap:
            name: corda-cm0
          name: corda-cm0
        - name: corda-claim1
          persistentVolumeClaim:
            claimName: corda-claim1

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: corda-claim1
  name: corda-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
data:
  combined-worker-compose.yaml: |-
    version: '2'
    services:
      postgresql:
        image: postgres:14.10
        restart: unless-stopped
        tty: true
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=password
          - POSTGRES_DB=cordacluster
        ports:
          - 5432:5432

      kafka:
        image: confluentinc/cp-kafka:7.6.0
        ports:
          - 9092:9092
        environment:
          KAFKA_NODE_ID: 1
          CLUSTER_ID: ZDFiZmU3ODUyMzRiNGI3NG
          KAFKA_PROCESS_ROLES: broker,controller
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,DOCKER_INTERNAL://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,DOCKER_INTERNAL://kafka:29092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_DEFAULT_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
          KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

      kafka-create-topics:
        image: openjdk:17-jdk
        depends_on:
          - kafka
        volumes:
          - C:/Users/SinghSanskriti(DEVEL/Documents/Github/corda5-samples/corda-cli-installer-5.2.0.0:/opt/corda-cli
        working_dir: /opt/corda-cli
        command: [
          "java",
          "-jar",
          "corda-cli.jar",
          "topic",
          "-b=kafka:29092",
          "create",
          "connect"
        ]

      corda:
        image: corda/corda-os-combined-worker-kafka:5.2.0.0
        depends_on:
          - postgresql
          - kafka
          - kafka-create-topics
        volumes:
          - ../config:/config
          - ../logs:/logs
        environment:
          JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
          LOG4J_CONFIG_FILE: config/log4j2.xml
          CONSOLE_LOG_LEVEL: info
          ENABLE_LOG4J2_DEBUG: false
        command: [
          "-mbus.busType=KAFKA",
          "-mbootstrap.servers=kafka:29092",
          "-spassphrase=password",
          "-ssalt=salt",
          "-ddatabase.user=user",
          "-ddatabase.pass=password",
          "-ddatabase.jdbc.url=jdbc:postgresql://postgresql:5432/cordacluster",
          "-ddatabase.jdbc.directory=/opt/jdbc-driver/"
        ]
        ports:
          - 8888:8888
          - 7004:7004
          - 5005:5005

      flow-management-tool:
        depends_on:
          - corda
        build:
          context: ../FlowManagementUI
          dockerfile: Dockerfile
        ports:
          - 5000:5000
  gradle-plugin-default-key.pem: |-
    -----BEGIN CERTIFICATE-----
    MIIB7zCCAZOgAwIBAgIEFyV7dzAMBggqhkjOPQQDAgUAMFsxCzAJBgNVBAYTAkdC
    MQ8wDQYDVQQHDAZMb25kb24xDjAMBgNVBAoMBUNvcmRhMQswCQYDVQQLDAJSMzEe
    MBwGA1UEAwwVQ29yZGEgRGV2IENvZGUgU2lnbmVyMB4XDTIwMDYyNTE4NTI1NFoX
    DTMwMDYyMzE4NTI1NFowWzELMAkGA1UEBhMCR0IxDzANBgNVBAcTBkxvbmRvbjEO
    MAwGA1UEChMFQ29yZGExCzAJBgNVBAsTAlIzMR4wHAYDVQQDExVDb3JkYSBEZXYg
    Q29kZSBTaWduZXIwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQDjSJtzQ+ldDFt
    pHiqdSJebOGPZcvZbmC/PIJRsZZUF1bl3PfMqyG3EmAe0CeFAfLzPQtf2qTAnmJj
    lGTkkQhxo0MwQTATBgNVHSUEDDAKBggrBgEFBQcDAzALBgNVHQ8EBAMCB4AwHQYD
    VR0OBBYEFLMkL2nlYRLvgZZq7GIIqbe4df4pMAwGCCqGSM49BAMCBQADSAAwRQIh
    ALB0ipx6EplT1fbUKqgc7rjH+pV1RQ4oKF+TkfjPdxnAAiArBdAI15uI70wf+xlL
    zU+Rc5yMtcOY4/moZUq36r0Ilg==
    -----END CERTIFICATE-----
  log4j2.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="INFO">
        <Appenders>
            <Console name="Console" target="SYSTEM_OUT">
                <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} %X - %msg%n"/>
            </Console>

            <RollingFile name="App"
                         fileName="logs/corda.log"
                         filePattern="logs/corda.%d{MM-dd-yyyy}.%i.log"
                         ignoreExceptions="false">
                <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} %X - %msg%n"/>
                <Policies>
                    <OnStartupTriggeringPolicy />
                    <TimeBasedTriggeringPolicy />
                    <SizeBasedTriggeringPolicy size="10 MB" />
                </Policies>
                <DefaultRolloverStrategy>
                    <Delete basePath="logs/">
                        <IfFileName glob="logs/corda.*.log">
                            <IfAny>
                                <IfAccumulatedFileSize exceeds="500 MB" />
                                <IfAccumulatedFileCount exceeds="10" />
                            </IfAny>
                        </IfFileName>
                        <IfLastModified age="7d" />
                    </Delete>
                </DefaultRolloverStrategy>
            </RollingFile>
        </Appenders>
        <Loggers>
            <logger name="Console">
                <AppenderRef ref="Console" level="info"/>
            </logger>

            <!-- log warn only for these 3rd party libs -->
            <Logger name="com.zaxxer.hikari" level="warn" />
            <Logger name="io.javalin.Javalin" level="warn" />
            <Logger name="org.apache.aries.spifly" level="warn" />
            <Logger name="org.apache.kafka" level="warn" />
            <Logger name="org.eclipse.jetty" level="warn" />
            <Logger name="org.hibernate" level="warn" />

            <!-- default to warn only for OSGi logging -->
            <Logger name="net.corda.osgi.framework.OSGiFrameworkWrap" level="warn" />

            <root level="debug">
                <AppenderRef ref="App" level="info"/>
            </root>
        </Loggers>
    </Configuration>
  r3-ca-key.pem: |-
    -----BEGIN CERTIFICATE-----
    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
    -----END CERTIFICATE-----
  static-network-config.json: |-
    [
      {
        "x500Name": "CN=ABC Imports, OU=Imports Dept, O=ABC Imports, L=India, C=IN",
        "cpi": "MyCorDapp"
      },
      {
        "x500Name": "CN=Global Exports, OU=Exports Dept, O=Global Exports, L=London, C=GB",
        "cpi": "MyCorDapp"
      },
      {
        "x500Name": "CN=ICICI Bank, OU=Banking Dept, O=ICICI Bank, L=India, C=IN",
        "cpi": "MyCorDapp"
      },
      {
        "x500Name": "CN=RBI Bank, OU=Banking Dept, O=Reserve Bank of India, L=India, C=IN",
        "cpi": "MyCorDapp"
      },
      {
        "x500Name": "CN=LBG Bank, OU=Banking Dept, O=Lloyds Banking Group, L=London, C=GB",
        "cpi": "MyCorDapp"
      },
      {
        "x500Name": "CN=BOE, OU=Banking Dept, O=Bank of England, L=London, C=GB",
        "cpi": "MyCorDapp"
      },
      {
        "x500Name" : "CN=NotaryRep1, OU=Test Dept, O=R3, L=London, C=GB",
        "cpi" : "NotaryServer",
        "serviceX500Name": "CN=NotaryService, OU=Test Dept, O=R3, L=London, C=GB"
      }
    ]
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: corda
  name: corda-cm0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: flow-management-tool
  name: flow-management-tool
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: flow-management-tool
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: flow-management-tool
    spec:
      containers:
        - image: flow-management-tool
          name: flow-management-tool
          ports:
            - containerPort: 5000
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: kafka
    spec:
      containers:
        - env:
            - name: CLUSTER_ID
              value: ZDFiZmU3ODUyMzRiNGI3NG
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://localhost:9092,DOCKER_INTERNAL://kafka:29092
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: 1@kafka:9093
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: DOCKER_INTERNAL
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092,DOCKER_INTERNAL://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,DOCKER_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_PROCESS_ROLES
              value: broker,controller
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
          image: confluentinc/cp-kafka:7.6.0
          name: kafka
          ports:
            - containerPort: 9092
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: kafka-create-topics
  name: kafka-create-topics
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka-create-topics
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: kafka-create-topics
    spec:
      containers:
        - args:
            - java
            - -jar
            - corda-cli.jar
            - topic
            - -b=kafka:29092
            - create
            - connect
          image: openjdk:17-jdk
          name: kafka-create-topics
          volumeMounts:
            - mountPath: /opt/corda-cli
              name: C
          workingDir: /opt/corda-cli
      restartPolicy: Always
      volumes:
        - name: C
          persistentVolumeClaim:
            claimName: C

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: C
  name: c
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
    kompose.version: 1.35.0 (HEAD)
  labels:
    io.kompose.service: postgresql
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgresql
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f combined-worker-compose.yaml -o kuberne
        kompose.version: 1.35.0 (HEAD)
      labels:
        io.kompose.service: postgresql
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: cordacluster
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_USER
              value: postgres
          image: postgres:14.10
          name: postgresql
          ports:
            - containerPort: 5432
              protocol: TCP
          tty: true
      restartPolicy: Always

